

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 02 22:34:09 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     008F                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0095                     	;# 
   106     0096                     	;# 
   107     0097                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     0105                     	;# 
   117     0107                     	;# 
   118     0108                     	;# 
   119     0109                     	;# 
   120     010C                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0185                     	;# 
   126     0187                     	;# 
   127     0188                     	;# 
   128     0189                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     008F                     	;# 
   176     0090                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0095                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     0105                     	;# 
   195     0107                     	;# 
   196     0108                     	;# 
   197     0109                     	;# 
   198     010C                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     0185                     	;# 
   204     0187                     	;# 
   205     0188                     	;# 
   206     0189                     	;# 
   207     018C                     	;# 
   208     018D                     	;# 
   209     0000                     	;# 
   210     0001                     	;# 
   211     0002                     	;# 
   212     0003                     	;# 
   213     0004                     	;# 
   214     0005                     	;# 
   215     0006                     	;# 
   216     0007                     	;# 
   217     0008                     	;# 
   218     0009                     	;# 
   219     000A                     	;# 
   220     000B                     	;# 
   221     000C                     	;# 
   222     000D                     	;# 
   223     000E                     	;# 
   224     000E                     	;# 
   225     000F                     	;# 
   226     0010                     	;# 
   227     0011                     	;# 
   228     0012                     	;# 
   229     0013                     	;# 
   230     0014                     	;# 
   231     0015                     	;# 
   232     0015                     	;# 
   233     0016                     	;# 
   234     0017                     	;# 
   235     0018                     	;# 
   236     0019                     	;# 
   237     001A                     	;# 
   238     001B                     	;# 
   239     001B                     	;# 
   240     001C                     	;# 
   241     001D                     	;# 
   242     001E                     	;# 
   243     001F                     	;# 
   244     0081                     	;# 
   245     0085                     	;# 
   246     0086                     	;# 
   247     0087                     	;# 
   248     0088                     	;# 
   249     0089                     	;# 
   250     008C                     	;# 
   251     008D                     	;# 
   252     008E                     	;# 
   253     008F                     	;# 
   254     0090                     	;# 
   255     0091                     	;# 
   256     0092                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0093                     	;# 
   260     0094                     	;# 
   261     0095                     	;# 
   262     0096                     	;# 
   263     0097                     	;# 
   264     0098                     	;# 
   265     0099                     	;# 
   266     009A                     	;# 
   267     009B                     	;# 
   268     009C                     	;# 
   269     009D                     	;# 
   270     009E                     	;# 
   271     009F                     	;# 
   272     0105                     	;# 
   273     0107                     	;# 
   274     0108                     	;# 
   275     0109                     	;# 
   276     010C                     	;# 
   277     010C                     	;# 
   278     010D                     	;# 
   279     010E                     	;# 
   280     010F                     	;# 
   281     0185                     	;# 
   282     0187                     	;# 
   283     0188                     	;# 
   284     0189                     	;# 
   285     018C                     	;# 
   286     018D                     	;# 
   287     001F                     _ADCON0bits	set	31
   288     0018                     _RCSTAbits	set	24
   289     001A                     _RCREG	set	26
   290     0006                     _PORTB	set	6
   291     0019                     _TXREG	set	25
   292     0008                     _PORTD	set	8
   293     000C                     _PIR1bits	set	12
   294     005D                     _TMR0IE	set	93
   295     005F                     _GIE	set	95
   296     0064                     _TXIF	set	100
   297     0066                     _ADIF	set	102
   298     0037                     _RB7	set	55
   299     008F                     _OSCCONbits	set	143
   300     009F                     _ADCON1bits	set	159
   301     0085                     _TRISAbits	set	133
   302     0099                     _SPBRG	set	153
   303     0088                     _TRISD	set	136
   304     0086                     _TRISB	set	134
   305     0098                     _TXSTAbits	set	152
   306     0466                     _ADIE	set	1126
   307     0188                     _ANSELbits	set	392
   308                           
   309                           	psect	cinit
   310     000F                     start_initialization:	
   311                           ; #config settings
   312                           
   313     000F                     __initialization:
   314                           
   315                           ; Clear objects allocated to COMMON
   316     000F  01F0               	clrf	__pbssCOMMON& (0+127)
   317     0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   318     0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   319     0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   320     0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   321     0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   322     0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   323     0016                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326     0016                     __end_of__initialization:
   327     0016  0183               	clrf	3
   328     0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMMON
   331     0070                     __pbssCOMMON:
   332     0070                     _ADC:
   333     0070                     	ds	2
   334     0072                     _conversion:
   335     0072                     	ds	2
   336     0074                     _i:
   337     0074                     	ds	2
   338     0076                     _recibido:
   339     0076                     	ds	1
   340                           
   341                           	psect	cstackCOMMON
   342     0077                     __pcstackCOMMON:
   343     0077                     ?_setup:
   344     0077                     ?_setupINTOSC:	
   345                           ; 1 bytes @ 0x0
   346                           
   347     0077                     ?_setupADC:	
   348                           ; 1 bytes @ 0x0
   349                           
   350     0077                     ?_initUART:	
   351                           ; 1 bytes @ 0x0
   352                           
   353     0077                     ?_isr:	
   354                           ; 1 bytes @ 0x0
   355                           
   356     0077                     ??_isr:	
   357                           ; 1 bytes @ 0x0
   358                           
   359     0077                     ?_main:	
   360                           ; 1 bytes @ 0x0
   361                           
   362                           
   363                           ; 1 bytes @ 0x0
   364     0077                     	ds	2
   365     0079                     ??_setup:
   366     0079                     ??_setupINTOSC:	
   367                           ; 1 bytes @ 0x2
   368                           
   369     0079                     ??_setupADC:	
   370                           ; 1 bytes @ 0x2
   371                           
   372     0079                     ??_initUART:	
   373                           ; 1 bytes @ 0x2
   374                           
   375     0079                     setupINTOSC@IRCF:	
   376                           ; 1 bytes @ 0x2
   377                           
   378                           
   379                           ; 1 bytes @ 0x2
   380     0079                     	ds	1
   381     007A                     ??_main:
   382                           
   383                           ; 1 bytes @ 0x3
   384     007A                     	ds	3
   385                           
   386                           	psect	maintext
   387     001A                     __pmaintext:	
   388 ;;
   389 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   390 ;;
   391 ;; *************** function _main *****************
   392 ;; Defined at:
   393 ;;		line 67 in file "main.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0, pclath, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : B00/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   407 ;;      Params:         0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0
   409 ;;      Temps:          3       0       0       0       0
   410 ;;      Totals:         3       0       0       0       0
   411 ;;Total ram usage:        3 bytes
   412 ;; Hardware stack levels required when called: 2
   413 ;; This function calls:
   414 ;;		_initUART
   415 ;;		_setup
   416 ;;		_setupADC
   417 ;;		_setupINTOSC
   418 ;; This function is called by:
   419 ;;		Startup code after reset
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423     001A                     _main:	
   424                           ;psect for function _main
   425                           
   426     001A                     l736:	
   427                           ;incstack = 0
   428                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   429                           
   430                           
   431                           ;main.c: 69:     setup();
   432     001A  120A  118A  208F  120A  118A  	fcall	_setup
   433     001F                     l738:
   434                           
   435                           ;main.c: 70:     setupINTOSC(7);
   436     001F  3007               	movlw	7
   437     0020  120A  118A  2074  120A  118A  	fcall	_setupINTOSC
   438     0025                     l740:
   439                           
   440                           ;main.c: 71:     setupADC();
   441     0025  120A  118A  2058  120A  118A  	fcall	_setupADC
   442     002A                     l742:
   443                           
   444                           ;main.c: 72:     initUART();
   445     002A  120A  118A  20A0  120A  118A  	fcall	_initUART
   446     002F                     l744:
   447                           
   448                           ;main.c: 77:             PORTD++;
   449     002F  3001               	movlw	1
   450     0030  00FA               	movwf	??_main
   451     0031  087A               	movf	??_main,w
   452     0032  1283               	bcf	3,5	;RP0=0, select bank0
   453     0033  1303               	bcf	3,6	;RP1=0, select bank0
   454     0034  0788               	addwf	8,f	;volatile
   455     0035                     l746:
   456                           
   457                           ;main.c: 79:             if(TXSTAbits.TRMT == 1){
   458     0035  1683               	bsf	3,5	;RP0=1, select bank1
   459     0036  1303               	bcf	3,6	;RP1=0, select bank1
   460     0037  1C98               	btfss	24,1	;volatile
   461     0038  283A               	goto	u41
   462     0039  283B               	goto	u40
   463     003A                     u41:
   464     003A  283F               	goto	l750
   465     003B                     u40:
   466     003B                     l748:
   467                           
   468                           ;main.c: 81:             TXREG = PORTD;
   469     003B  1283               	bcf	3,5	;RP0=0, select bank0
   470     003C  1303               	bcf	3,6	;RP1=0, select bank0
   471     003D  0808               	movf	8,w	;volatile
   472     003E  0099               	movwf	25	;volatile
   473     003F                     l750:
   474                           
   475                           ;main.c: 84:         if(PIR1bits.RCIF == 1){
   476     003F  1283               	bcf	3,5	;RP0=0, select bank0
   477     0040  1E8C               	btfss	12,5	;volatile
   478     0041  2843               	goto	u51
   479     0042  2844               	goto	u50
   480     0043                     u51:
   481     0043  2847               	goto	l71
   482     0044                     u50:
   483     0044                     l752:
   484                           
   485                           ;main.c: 86:             PORTB = RCREG;
   486     0044  081A               	movf	26,w	;volatile
   487     0045  0086               	movwf	6	;volatile
   488     0046                     l754:
   489                           
   490                           ;main.c: 87:             PIR1bits.RCIF = 0;
   491     0046  128C               	bcf	12,5	;volatile
   492     0047                     l71:	
   493                           ;main.c: 88:         }
   494                           
   495                           
   496                           ;main.c: 89:         _delay((unsigned long)((500)*(8000000/4000.0)));
   497     0047  3006               	movlw	6
   498     0048  00FC               	movwf	??_main+2
   499     0049  3013               	movlw	19
   500     004A  00FB               	movwf	??_main+1
   501     004B  30AD               	movlw	173
   502     004C  00FA               	movwf	??_main
   503     004D                     u87:
   504     004D  0BFA               	decfsz	??_main,f
   505     004E  284D               	goto	u87
   506     004F  0BFB               	decfsz	??_main+1,f
   507     0050  284D               	goto	u87
   508     0051  0BFC               	decfsz	??_main+2,f
   509     0052  284D               	goto	u87
   510     0053  2854               	nop2
   511     0054  282F               	goto	l744
   512     0055  120A  118A  280C   	ljmp	start
   513     0058                     __end_of_main:
   514                           
   515                           	psect	text1
   516     0074                     __ptext1:	
   517 ;; *************** function _setupINTOSC *****************
   518 ;; Defined at:
   519 ;;		line 13 in file "oscilador.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;  IRCF            1    wreg     unsigned char 
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  IRCF            1    2[COMMON] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, status,2, status,0
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   533 ;;      Params:         0       0       0       0       0
   534 ;;      Locals:         1       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0
   536 ;;      Totals:         1       0       0       0       0
   537 ;;Total ram usage:        1 bytes
   538 ;; Hardware stack levels used: 1
   539 ;; Hardware stack levels required when called: 1
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547     0074                     _setupINTOSC:	
   548                           ;psect for function _setupINTOSC
   549                           
   550                           
   551                           ;incstack = 0
   552                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
   553                           ;setupINTOSC@IRCF stored from wreg
   554     0074  00F9               	movwf	setupINTOSC@IRCF
   555     0075                     l704:
   556                           
   557                           ;oscilador.c: 16:     if(IRCF == 7){
   558     0075  3007               	movlw	7
   559     0076  0679               	xorwf	setupINTOSC@IRCF,w
   560     0077  1D03               	btfss	3,2
   561     0078  287A               	goto	u11
   562     0079  287B               	goto	u10
   563     007A                     u11:
   564     007A  287F               	goto	l100
   565     007B                     u10:
   566     007B                     l706:
   567                           
   568                           ;oscilador.c: 17:         OSCCONbits.IRCF = 0b111;
   569     007B  3070               	movlw	112
   570     007C  1683               	bsf	3,5	;RP0=1, select bank1
   571     007D  1303               	bcf	3,6	;RP1=0, select bank1
   572     007E  048F               	iorwf	15,f	;volatile
   573     007F                     l100:	
   574                           ;oscilador.c: 18:     }
   575                           
   576                           
   577                           ;oscilador.c: 19:     if(IRCF == 6){
   578     007F  3006               	movlw	6
   579     0080  0679               	xorwf	setupINTOSC@IRCF,w
   580     0081  1D03               	btfss	3,2
   581     0082  2884               	goto	u21
   582     0083  2885               	goto	u20
   583     0084                     u21:
   584     0084  288B               	goto	l710
   585     0085                     u20:
   586     0085                     l708:
   587                           
   588                           ;oscilador.c: 20:         OSCCONbits.IRCF = 0b110;
   589     0085  1683               	bsf	3,5	;RP0=1, select bank1
   590     0086  1303               	bcf	3,6	;RP1=0, select bank1
   591     0087  080F               	movf	15,w	;volatile
   592     0088  398F               	andlw	-113
   593     0089  3860               	iorlw	96
   594     008A  008F               	movwf	15	;volatile
   595     008B                     l710:
   596                           
   597                           ;oscilador.c: 23:     OSCCONbits.SCS = 1;
   598     008B  1683               	bsf	3,5	;RP0=1, select bank1
   599     008C  1303               	bcf	3,6	;RP1=0, select bank1
   600     008D  140F               	bsf	15,0	;volatile
   601     008E                     l102:
   602     008E  0008               	return
   603     008F                     __end_of_setupINTOSC:
   604                           
   605                           	psect	text2
   606     0058                     __ptext2:	
   607 ;; *************** function _setupADC *****************
   608 ;; Defined at:
   609 ;;		line 167 in file "main.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0
   625 ;;      Temps:          1       0       0       0       0
   626 ;;      Totals:         1       0       0       0       0
   627 ;;Total ram usage:        1 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; Hardware stack levels required when called: 1
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637     0058                     _setupADC:	
   638                           ;psect for function _setupADC
   639                           
   640     0058                     l712:	
   641                           ;incstack = 0
   642                           ; Regs used in _setupADC: [wreg+status,2+status,0]
   643                           
   644                           
   645                           ;main.c: 168:     TRISAbits.TRISA1 = 1;
   646     0058  1683               	bsf	3,5	;RP0=1, select bank1
   647     0059  1303               	bcf	3,6	;RP1=0, select bank1
   648     005A  1485               	bsf	5,1	;volatile
   649                           
   650                           ;main.c: 169:     ANSELbits.ANS1 = 1;
   651     005B  1683               	bsf	3,5	;RP0=1, select bank3
   652     005C  1703               	bsf	3,6	;RP1=1, select bank3
   653     005D  1488               	bsf	8,1	;volatile
   654                           
   655                           ;main.c: 171:     ADCON0bits.ADCS1 = 0;
   656     005E  1283               	bcf	3,5	;RP0=0, select bank0
   657     005F  1303               	bcf	3,6	;RP1=0, select bank0
   658     0060  139F               	bcf	31,7	;volatile
   659                           
   660                           ;main.c: 172:     ADCON0bits.ADCS0 = 1;
   661     0061  171F               	bsf	31,6	;volatile
   662                           
   663                           ;main.c: 174:     ADCON1bits.VCFG1 = 0;
   664     0062  1683               	bsf	3,5	;RP0=1, select bank1
   665     0063  1303               	bcf	3,6	;RP1=0, select bank1
   666     0064  129F               	bcf	31,5	;volatile
   667                           
   668                           ;main.c: 175:     ADCON1bits.VCFG0 = 0;
   669     0065  121F               	bcf	31,4	;volatile
   670                           
   671                           ;main.c: 177:     ADCON1bits.ADFM = 0;
   672     0066  139F               	bcf	31,7	;volatile
   673     0067                     l714:
   674                           
   675                           ;main.c: 178:     ADCON0bits.CHS = 0b0001;
   676     0067  1283               	bcf	3,5	;RP0=0, select bank0
   677     0068  1303               	bcf	3,6	;RP1=0, select bank0
   678     0069  081F               	movf	31,w	;volatile
   679     006A  39C3               	andlw	-61
   680     006B  3804               	iorlw	4
   681     006C  009F               	movwf	31	;volatile
   682     006D                     l716:
   683                           
   684                           ;main.c: 179:     ADCON0bits.ADON = 1;
   685     006D  141F               	bsf	31,0	;volatile
   686     006E                     l718:
   687                           
   688                           ;main.c: 180:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   689     006E  3042               	movlw	66
   690     006F  00F9               	movwf	??_setupADC
   691     0070                     u97:
   692     0070  0BF9               	decfsz	??_setupADC,f
   693     0071  2870               	goto	u97
   694     0072  0000               	nop
   695     0073                     l95:
   696     0073  0008               	return
   697     0074                     __end_of_setupADC:
   698                           
   699                           	psect	text3
   700     008F                     __ptext3:	
   701 ;; *************** function _setup *****************
   702 ;; Defined at:
   703 ;;		line 137 in file "main.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		status,2
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   717 ;;      Params:         0       0       0       0       0
   718 ;;      Locals:         0       0       0       0       0
   719 ;;      Temps:          0       0       0       0       0
   720 ;;      Totals:         0       0       0       0       0
   721 ;;Total ram usage:        0 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; Hardware stack levels required when called: 1
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731     008F                     _setup:	
   732                           ;psect for function _setup
   733                           
   734     008F                     l694:	
   735                           ;incstack = 0
   736                           ; Regs used in _setup: [status,2]
   737                           
   738                           
   739                           ;main.c: 138:     TRISB = 0;
   740     008F  1683               	bsf	3,5	;RP0=1, select bank1
   741     0090  1303               	bcf	3,6	;RP1=0, select bank1
   742     0091  0186               	clrf	6	;volatile
   743                           
   744                           ;main.c: 139:     TRISD = 0;
   745     0092  0188               	clrf	8	;volatile
   746                           
   747                           ;main.c: 141:     PORTB = 0;
   748     0093  1283               	bcf	3,5	;RP0=0, select bank0
   749     0094  1303               	bcf	3,6	;RP1=0, select bank0
   750     0095  0186               	clrf	6	;volatile
   751                           
   752                           ;main.c: 142:     PORTD = 0;
   753     0096  0188               	clrf	8	;volatile
   754     0097                     l696:
   755                           
   756                           ;main.c: 144:     GIE = 1;
   757     0097  178B               	bsf	11,7	;volatile
   758     0098                     l698:
   759                           
   760                           ;main.c: 145:     ADIE = 1;
   761     0098  1683               	bsf	3,5	;RP0=1, select bank1
   762     0099  1303               	bcf	3,6	;RP1=0, select bank1
   763     009A  170C               	bsf	12,6	;volatile
   764     009B                     l700:
   765                           
   766                           ;main.c: 146:     TMR0IE = 1;
   767     009B  168B               	bsf	11,5	;volatile
   768     009C                     l702:
   769                           
   770                           ;main.c: 147:     ADIF = 0;
   771     009C  1283               	bcf	3,5	;RP0=0, select bank0
   772     009D  1303               	bcf	3,6	;RP1=0, select bank0
   773     009E  130C               	bcf	12,6	;volatile
   774     009F                     l89:
   775     009F  0008               	return
   776     00A0                     __end_of_setup:
   777                           
   778                           	psect	text4
   779     00A0                     __ptext4:	
   780 ;; *************** function _initUART *****************
   781 ;; Defined at:
   782 ;;		line 153 in file "main.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;		None
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0
   799 ;;      Totals:         0       0       0       0       0
   800 ;;Total ram usage:        0 bytes
   801 ;; Hardware stack levels used: 1
   802 ;; Hardware stack levels required when called: 1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810     00A0                     _initUART:	
   811                           ;psect for function _initUART
   812                           
   813     00A0                     l720:	
   814                           ;incstack = 0
   815                           ; Regs used in _initUART: [wreg]
   816                           
   817                           
   818                           ;main.c: 155:     SPBRG = 12;
   819     00A0  300C               	movlw	12
   820     00A1  1683               	bsf	3,5	;RP0=1, select bank1
   821     00A2  1303               	bcf	3,6	;RP1=0, select bank1
   822     00A3  0099               	movwf	25	;volatile
   823     00A4                     l722:
   824                           
   825                           ;main.c: 157:     TXSTAbits.SYNC = 0;
   826     00A4  1218               	bcf	24,4	;volatile
   827     00A5                     l724:
   828                           
   829                           ;main.c: 158:     RCSTAbits.SPEN = 1;
   830     00A5  1283               	bcf	3,5	;RP0=0, select bank0
   831     00A6  1303               	bcf	3,6	;RP1=0, select bank0
   832     00A7  1798               	bsf	24,7	;volatile
   833     00A8                     l726:
   834                           
   835                           ;main.c: 162:     TXSTAbits.TXEN = 1;
   836     00A8  1683               	bsf	3,5	;RP0=1, select bank1
   837     00A9  1303               	bcf	3,6	;RP1=0, select bank1
   838     00AA  1698               	bsf	24,5	;volatile
   839     00AB                     l728:
   840                           
   841                           ;main.c: 163:     PIR1bits.TXIF = 0;
   842     00AB  1283               	bcf	3,5	;RP0=0, select bank0
   843     00AC  1303               	bcf	3,6	;RP1=0, select bank0
   844     00AD  120C               	bcf	12,4	;volatile
   845     00AE                     l730:
   846                           
   847                           ;main.c: 164:     RCSTAbits.CREN = 1;
   848     00AE  1618               	bsf	24,4	;volatile
   849     00AF                     l92:
   850     00AF  0008               	return
   851     00B0                     __end_of_initUART:
   852                           
   853                           	psect	text5
   854     00B0                     __ptext5:	
   855 ;; *************** function _isr *****************
   856 ;; Defined at:
   857 ;;		line 56 in file "main.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		None
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0
   873 ;;      Temps:          2       0       0       0       0
   874 ;;      Totals:         2       0       0       0       0
   875 ;;Total ram usage:        2 bytes
   876 ;; Hardware stack levels used: 1
   877 ;; This function calls:
   878 ;;		Nothing
   879 ;; This function is called by:
   880 ;;		Interrupt level 1
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884     00B0                     _isr:	
   885                           ;psect for function _isr
   886                           
   887     00B0                     i1l732:
   888                           
   889                           ;main.c: 57:     if(PIR1bits.ADIF){
   890     00B0  1283               	bcf	3,5	;RP0=0, select bank0
   891     00B1  1303               	bcf	3,6	;RP1=0, select bank0
   892     00B2  1F0C               	btfss	12,6	;volatile
   893     00B3  28B5               	goto	u3_21
   894     00B4  28B6               	goto	u3_20
   895     00B5                     u3_21:
   896     00B5  28B9               	goto	i1l64
   897     00B6                     u3_20:
   898     00B6                     i1l734:
   899                           
   900                           ;main.c: 58:         RB7 = 1;
   901     00B6  1786               	bsf	6,7	;volatile
   902                           
   903                           ;main.c: 59:         ADIF = 0;
   904     00B7  130C               	bcf	12,6	;volatile
   905                           
   906                           ;main.c: 60:     TXIF = 0;
   907     00B8  120C               	bcf	12,4	;volatile
   908     00B9                     i1l64:
   909     00B9  0878               	movf	??_isr+1,w
   910     00BA  008A               	movwf	10
   911     00BB  0E77               	swapf	??_isr,w
   912     00BC  0083               	movwf	3
   913     00BD  0EFE               	swapf	btemp,f
   914     00BE  0E7E               	swapf	btemp,w
   915     00BF  0009               	retfie
   916     00C0                     __end_of_isr:
   917     007E                     btemp	set	126	;btemp
   918     007E                     wtemp0	set	126
   919                           
   920                           	psect	intentry
   921     0004                     __pintentry:	
   922                           ;incstack = 0
   923                           ; Regs used in _isr: []
   924                           
   925     0004                     interrupt_function:
   926     007E                     saved_w	set	btemp
   927     0004  00FE               	movwf	btemp
   928     0005  0E03               	swapf	3,w
   929     0006  00F7               	movwf	??_isr
   930     0007  080A               	movf	10,w
   931     0008  00F8               	movwf	??_isr+1
   932     0009  120A  118A  28B0   	ljmp	_isr
   933                           
   934                           	psect	idloc
   935                           
   936                           ;Config register IDLOC0 @ 0x2000
   937                           ;	unspecified, using default values
   938     2000                     	org	8192
   939     2000  3FFF               	dw	16383
   940                           
   941                           ;Config register IDLOC1 @ 0x2001
   942                           ;	unspecified, using default values
   943     2001                     	org	8193
   944     2001  3FFF               	dw	16383
   945                           
   946                           ;Config register IDLOC2 @ 0x2002
   947                           ;	unspecified, using default values
   948     2002                     	org	8194
   949     2002  3FFF               	dw	16383
   950                           
   951                           ;Config register IDLOC3 @ 0x2003
   952                           ;	unspecified, using default values
   953     2003                     	org	8195
   954     2003  3FFF               	dw	16383
   955                           
   956                           	psect	config
   957                           
   958                           ;Config register CONFIG1 @ 0x2007
   959                           ;	Oscillator Selection bits
   960                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   961                           ;	Watchdog Timer Enable bit
   962                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   963                           ;	Power-up Timer Enable bit
   964                           ;	PWRTE = OFF, PWRT disabled
   965                           ;	RE3/MCLR pin function select bit
   966                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   967                           ;	Code Protection bit
   968                           ;	CP = OFF, Program memory code protection is disabled
   969                           ;	Data Code Protection bit
   970                           ;	CPD = OFF, Data memory code protection is disabled
   971                           ;	Brown Out Reset Selection bits
   972                           ;	BOREN = OFF, BOR disabled
   973                           ;	Internal External Switchover bit
   974                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   975                           ;	Fail-Safe Clock Monitor Enabled bit
   976                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   977                           ;	Low Voltage Programming Enable bit
   978                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   979                           ;	In-Circuit Debugger Mode bit
   980                           ;	DEBUG = 0x1, unprogramme   981     2007                     	org	8199
   982     2007  20D4               	dw	8404
   983                           
   984                           ;Config register CONFIG2 @ 0x2008
   985                           ;	Brown-out Reset Selection bit
   986                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   987                           ;	Flash Program Memory Self Write Enable bits
   988                           ;	WRT = OFF, Write protection off
   989     2008                     	org	8200
   990     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setupADC
    _main->_setupINTOSC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              3 COMMON     3     3      0
                           _initUART
                              _setup
                           _setupADC
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0      30
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initUART
   _setup
   _setupADC
   _setupINTOSC

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 02 22:34:09 2022

                      _i 0074                       l71 0047                       l92 00AF  
                     l95 0073                       l89 009F                       u10 007B  
                     u11 007A                       u20 0085                       u21 0084  
                     u40 003B                       u41 003A                       u50 0044  
                     u51 0043                       u87 004D                       u97 0070  
                    l100 007F                      l102 008E                      _ADC 0070  
                    l700 009B                      l702 009C                      l710 008B  
                    l720 00A0                      l712 0058                      l704 0075  
                    l730 00AE                      l722 00A4                      l714 0067  
                    l706 007B                      l724 00A5                      l716 006D  
                    l708 0085                      l740 0025                      l726 00A8  
                    l718 006E                      l750 003F                      l742 002A  
                    l728 00AB                      l752 0044                      l744 002F  
                    l736 001A                      l754 0046                      l746 0035  
                    l738 001F                      l748 003B                      l694 008F  
                    l696 0097                      l698 0098                      _GIE 005F  
                    _RB7 0037                      _isr 00B0                     _ADIE 0466  
                   _ADIF 0066                     ?_isr 0077                     i1l64 00B9  
                   _TXIF 0064                     u3_20 00B6                     u3_21 00B5  
                   _main 001A                     btemp 007E                     start 000C  
                  ??_isr 0077                    ?_main 0077                    i1l732 00B0  
                  i1l734 00B6                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019                    _setup 008F  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0058                   ??_main 007A  
                 ?_setup 0077                   _TMR0IE 005D         __end_of_initUART 00B0  
           ?_setupINTOSC 0077         __end_of_setupADC 0074                   saved_w 007E  
__end_of__initialization 0016           __pcstackCOMMON 0077            __end_of_setup 00A0  
                ??_setup 0079               __pmaintext 001A               __pintentry 0004  
              ?_initUART 0077               _conversion 0072                ?_setupADC 0077  
              _ANSELbits 0188                  __ptext1 0074                  __ptext2 0058  
                __ptext3 008F                  __ptext4 00A0                  __ptext5 00B0  
   end_of_initialization 0016               ??_initUART 0079               ??_setupADC 0079  
              _RCSTAbits 0018                _TRISAbits 0085                _TXSTAbits 0098  
    start_initialization 000F              __end_of_isr 00C0              __pbssCOMMON 0070  
              ___latbits 0002          setupINTOSC@IRCF 0079        interrupt_function 0004  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
          ??_setupINTOSC 0079      __end_of_setupINTOSC 008F                 _initUART 00A0  
               _recibido 0076                 _setupADC 0058                 intlevel1 0000  
             _OSCCONbits 008F              _setupINTOSC 0074  
